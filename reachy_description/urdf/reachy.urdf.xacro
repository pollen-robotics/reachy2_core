<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="reachy2">

  <xacro:arg name="use_fake_hardware" default="false" />
  <xacro:arg name="use_gazebo" default="false" />
  <xacro:arg name="use_moveit_gazebo" default="false" />


  <xacro:include filename="$(find reachy_description)/urdf/head.urdf.xacro" />
  <xacro:include filename="$(find arm_description)/urdf/arm.urdf.xacro" />


  <xacro:include filename="$(find pollen_generic_description)/urdf/inertial_primitives.urdf.xacro" />
  <xacro:include filename="$(find pollen_generic_description)/urdf/materials.urdf.xacro" />


  <!-- config  -->
  <xacro:arg name="neck_config" default="$(find orbita3d_description)/config/fake.yaml" />
  <xacro:arg name="right_arm_config" default="$(find arm_description)/config/fake_arm.yaml" />
  <xacro:arg name="left_arm_config" default="$(find arm_description)/config/fake_arm.yaml" />
  <!-- config  -->


  <!-- MODEL PARAMETERS -->
  <xacro:property name="base_collision" value="true" />
  <xacro:property name="base_visual" value="true" />
  <xacro:property name="damping" value="0.1" />
  <xacro:property name="friction" value="0.1" />




  <!-- Height of the Torso Origin Min=0.9 Max=1.3 (TODO: make it a parameter at launch)  -->
  <xacro:property name="base_height" value="1.0" />

  <!-- Parameters for the 3 bar base height -->
  <xacro:property name="back_bar_min_length" value="0.536" />
  <xacro:property name="back_bar_max_length" value="0.936" />
  <xacro:property name="bar_angle" value="${radians(27.458)}" />
  <xacro:property name="bar_triangle_base" value="0.226186" />
  <xacro:property name="bar_small_triangle_base" value="0.13857" />

  <xacro:property name="back_bar_z" value="0.164" />
  <xacro:property name="back_bar_x" value="-0.122" />
  <xacro:property name="left_bar_x" value="0.080966" />
  <xacro:property name="left_bar_y" value="0.117182" />
  <xacro:property name="right_bar_x" value="0.080966" />
  <xacro:property name="right_bar_y" value="-0.117182" />

  <xacro:property name="back_bar_length" value="${base_height-0.2-back_bar_z}" />

  <xacro:property name="front_bar_length" value="${sqrt(back_bar_length*back_bar_length+bar_small_triangle_base*bar_small_triangle_base)}" />




  <!-- <link name="world" /> -->
  <!-- <joint name="world_joint" type="fixed"> -->
  <!--   <origin xyz="0 0 1.0" rpy="0 0 0" /> -->
  <!--   <parent link="world" /> -->
  <!--   <child link="torso" /> -->
  <!-- </joint> -->

  <link name="world" />
  <joint name="world_joint" type="fixed">
    <origin xyz="0 0 0.0" rpy="0 0 0" />
    <parent link="world" />
    <child link="base_link" />
  </joint>




  <link name="base_link">
	<visual>
	  <origin xyz="0 0 0" rpy="0 0 0"/>
	  <geometry>

	    <mesh filename="file://$(find reachy_description)/meshes/mobile_base_visual.dae" />
	  </geometry>
	  <xacro:reachy_grey/>
	</visual>

	<collision>
	  <origin xyz="0 0 0.13045" rpy="0 0 0"/>
	  <geometry>
	    <cylinder radius="0.245" length="0.2609"/>
	  </geometry>

	</collision>

	<inertial>
      <origin xyz="0.008 -0.00048 0.112" rpy="0 0 0"/>
      <mass value="24.0"/>
      <inertia ixx="0.40791094" ixy="-0.00167148" ixz="-0.00178789"
	       iyx="-0.00167148" iyy="0.4236827" iyz="0.00026596"
	       izx="-0.00178789" izy="0.00026596" izz="0.70990763"/>


    </inertial>

</link>

<!-- <joint name="base_link_joint" type="fixed"> -->
<!-- 	<origin xyz="1 0 0" rpy="0 0 0"/> -->
<!-- 	<parent link="world"/> -->
<!-- 	<child link="base_link"/> -->
<!-- </joint> -->


<link name="back_bar">
	<visual>
	  <origin xyz="0 0 ${back_bar_length/2}" rpy="0 0 0"/>
	  <geometry>
	    <box size="0.04 0.04 ${back_bar_length}"/>
	  </geometry>
	  <xacro:reachy_grey/>
	</visual>

	<collision>
	  <origin xyz="0 0 ${back_bar_length/2}" rpy="0 0 0"/>
	  <geometry>
	    <box size="0.04 0.04 ${back_bar_length}"/>
	  </geometry>
	</collision>


</link>
<link name="left_bar">
	<visual>
	  <origin xyz="0.0 0 ${front_bar_length/2}" rpy="0 0 0"/>
	  <geometry>
	    <box size="0.04 0.04 ${front_bar_length}"/>
	  </geometry>

	  <xacro:reachy_grey/>
	</visual>
	<collision>
	  <origin xyz="0.0 0 ${front_bar_length/2}" rpy="0 0 0"/>
	  <geometry>
	    <box size="0.04 0.04 ${front_bar_length}"/>
	  </geometry>
	</collision>

</link>

<link name="right_bar">
	<visual>
	  <origin xyz="0.0 0 ${front_bar_length/2}" rpy="0 0 0"/>
	  <geometry>
	    <box size="0.04 0.04 ${front_bar_length}"/>
	  </geometry>
	  <xacro:reachy_grey/>
	</visual>
	<collision>
	  <origin xyz="0.0 0 ${front_bar_length/2}" rpy="0 0 0"/>
	  <geometry>
	    <box size="0.04 0.04 ${front_bar_length}"/>
	  </geometry>
	</collision>

</link>

<joint name="back_bar_joint" type="fixed">
	<!-- <origin xyz="-0.122 0 0.057" rpy="0 0 0"/> -->
	<origin xyz="${back_bar_x} 0 ${back_bar_z}" rpy="0 0 0"/>
	<parent link="base_link"/>
	<child link="back_bar"/>
</joint>
<joint name="left_bar_joint" type="fixed">

	<!-- <origin xyz="0.080966 0.11718 0.057" rpy="0 ${-pi/2+atan2(back_bar_length,bar_small_triangle_base)} ${bar_angle}"/> -->
	<origin xyz="${left_bar_x} ${left_bar_y} ${back_bar_z}" rpy="0 ${-pi/2+atan2(back_bar_length,bar_small_triangle_base)} ${bar_angle}"/>
	<parent link="base_link"/>
	<child link="left_bar"/>
</joint>
<joint name="right_bar_joint" type="fixed">

	<!-- <origin xyz="0.080966 -0.11718 0.057" rpy="0 ${-pi/2+atan2(back_bar_length,bar_small_triangle_base)} ${-bar_angle}"/> -->
	<origin xyz="${right_bar_x} ${right_bar_y} ${back_bar_z}" rpy="0 ${-pi/2+atan2(back_bar_length,bar_small_triangle_base)} ${-bar_angle}"/>
	<parent link="base_link"/>
	<child link="right_bar"/>
</joint>



  <!-- TORSO -->
  <link name="torso">
    <visual>
      <origin xyz="0 0 0 " rpy="0 0 0"/>
      <geometry>
	<!-- <mesh filename="package://reachy_description/meshes/torso_visual_high.dae" /> -->
	<mesh filename="file://$(find reachy_description)/meshes/torso_visual_high.dae" />
	<!-- <mesh filename="file://$(find reachy_description)/meshes/torso_visual_high2.dae" /> -->
      </geometry>

    </visual>

    <inertial>

      <!-- <origin xyz="-0.098614 -0.000471 -0.018363" rpy="0 0 0"/> -->
      <origin xyz="-0.051614 -0.000471 -0.018363" rpy="0 0 0"/>
      <mass value="6.314"/>
      <inertia ixx="0.07397673" ixy="-4.624e-4" ixz="-0.00175905"
	       iyx="-0.00046237" iyy="0.04454533" iyz="0.00008675"
	       izx="-0.00175905" izy="0.00008675" izz="0.05494939"/>


    </inertial>

    <collision>
      <origin xyz="0 0 0 " rpy="0 0 0"/>
      <geometry>
	<!-- <mesh filename="package://reachy_description/meshes/torso_collider_no_cone.dae" /> -->
	<mesh filename="file://$(find reachy_description)/meshes/torso_collider_no_cone.dae" />
      </geometry>

    </collision>



  </link>

  <joint name="torso_base" type="fixed">
    <origin xyz="0.0768 0 ${0.2+back_bar_length}" rpy="0 0 0" />
    <parent link="back_bar" />
    <child link="torso" />
  </joint>

  <link name="logo">
            <inertial>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <mass value="0.001"/>
                <inertia ixx="1.0e-6" ixy="1.0e-8" ixz="1.0e-8" iyy="1.0e-6" iyz="1.0e-8" izz="1.0e-6"/>
            </inertial>
  </link>
  <joint name="logo_joint" type="fixed">
    <origin xyz="0.047 0 0.0" rpy="0 0 0" />
    <parent link="torso" />
    <child link="logo" />
  </joint>


  <!-- <gazebo reference="torso"> -->
  <!--   <!-\- <material>Gazebo/Black</material> -\-> -->
  <!--   <static>true</static> -->
  <!-- </gazebo> -->

  <!-- Head -->
  <xacro:head
    parent="torso"
    damping="${damping}" friction="${friction}"
    neck_config="$(arg neck_config)"
  />

  <!-- RIGHT ARM -->
  <xacro:arm
    prefix="r" parent="torso" side="right"
    damping="${damping}" friction="${friction}"
    config_file="$(arg right_arm_config)"
  />

  <!-- LEFT ARM -->
  <xacro:arm
    prefix="l" parent="torso" side="left"
    damping="${damping}" friction="${friction}"
    config_file="$(arg left_arm_config)"
  />


  <link name="sr_cam_l_optical">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="0.001"/>
                <inertia ixx="1.0e-6" ixy="1.0e-8" ixz="1.0e-8" iyy="1.0e-6" iyz="1.0e-8" izz="1.0e-6"/>
    </inertial>
  </link>
  <link name="sr_cam_l_frame">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
      <mass value="0.001"/>
                <inertia ixx="1.0e-6" ixy="1.0e-8" ixz="1.0e-8" iyy="1.0e-6" iyz="1.0e-8" izz="1.0e-6"/>
    </inertial>
  </link>
  <joint name="sr_cam_l_optical_joint" type="fixed">
    <origin xyz="0.002597 0.009989 0.038089" rpy="${radians(-48.0-90.0)} 0.0 ${-pi/2}"/>
    <parent link="logo"/>
    <child link="sr_cam_l_optical"/>
  </joint>
  <joint name="sr_cam_l_frame_joint" type="fixed">
    <origin xyz="0.002597 0.009989 0.038089" rpy="0.0 ${radians(48.0)} 0.0"/>
    <parent link="logo"/>
    <child link="sr_cam_l_frame"/>
  </joint>


  <link name="sr_cam_r_optical">
            <inertial>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <mass value="0.001"/>
                <inertia ixx="1.0e-6" ixy="1.0e-8" ixz="1.0e-8" iyy="1.0e-6" iyz="1.0e-8" izz="1.0e-6"/>
            </inertial>
  </link>
  <link name="sr_cam_r_frame">
            <inertial>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <mass value="0.001"/>
                <inertia ixx="1.0e-6" ixy="1.0e-8" ixz="1.0e-8" iyy="1.0e-6" iyz="1.0e-8" izz="1.0e-6"/>
            </inertial>
  </link>
  <joint name="sr_cam_r_optical_joint" type="fixed">
    <origin xyz="0.002597 -0.009989 0.038089" rpy="${radians(-48.0-90.0)} 0.0 ${-pi/2}"/>
    <parent link="logo"/>
    <child link="sr_cam_r_optical"/>
  </joint>
  <joint name="sr_cam_r_frame_joint" type="fixed">
    <origin xyz="0.002597 -0.009989 0.038089" rpy="0.0 ${radians(48.0)} 0.0 "/>
    <parent link="logo"/>
    <child link="sr_cam_r_frame"/>
  </joint>



      <gazebo reference="sr_cam_l_frame">
	<!-- <link name="left_camera"> -->
	<sensor type="camera" name="left_camera">


          <!-- Set always_on only sensor, not on plugin -->
          <always_on>0</always_on>

          <!-- Set update_rate only sensor, not on plugin -->
          <update_rate>30</update_rate>

          <camera name="sr_cam_l">
            <horizontal_fov>${77.0*pi/180}</horizontal_fov>
            <image>
              <width>1280</width>
              <height>800</height>
              <format>R8G8B8</format>
            </image>
            <distortion>
              <k1>0.0</k1>
              <k2>0.0</k2>
              <k3>0.0</k3>
              <p1>0.0</p1>
              <p2>0.0</p2>
              <center>0.5 0.5</center>
            </distortion>

            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>

          </camera>

          <!-- Use camera, not camera_triggered -->
          <plugin name="sr_left_camera_controller" filename="libgazebo_ros_camera.so">
              <ros>
                <namespace>/</namespace>
                <remapping>image_raw:=image_raw</remapping>
                <remapping>camera_info:=camera_info</remapping>
              </ros>
              <camera_name>sr_left_image</camera_name>


            <!-- <ros> -->
            <!--   <namespace>custom_ns</namespace> -->
            <!--   <argument>image_raw:=custom_img</argument> -->
            <!--   <argument>camera_info:=custom_info</argument> -->
            <!-- </ros> -->

            <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
            <!-- <camera_name>left_camera</camera_name> -->

            <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
            <frame_name>sr_cam_l_optical</frame_name>

            <hack_baseline>0.07</hack_baseline>

            <!-- No need to repeat distortion parameters or to set autoDistortion -->
          </plugin>
        </sensor>
      </gazebo>


      <gazebo reference="sr_cam_r_frame">
	<!-- <link name="left_camera"> -->
	<sensor type="camera" name="right_camera">


          <!-- Set always_on only sensor, not on plugin -->
          <always_on>0</always_on>

          <!-- Set update_rate only sensor, not on plugin -->
          <update_rate>30</update_rate>

          <camera name="sr_cam_r">
            <horizontal_fov>${77.0*pi/180}</horizontal_fov>
            <image>
              <width>1280</width>
              <height>800</height>
              <format>R8G8B8</format>
            </image>
            <distortion>
              <k1>0.0</k1>
              <k2>0.0</k2>
              <k3>0.0</k3>
              <p1>0.0</p1>
              <p2>0.0</p2>
              <center>0.5 0.5</center>
            </distortion>

            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>

          </camera>

          <!-- Use camera, not camera_triggered -->
          <plugin name="sr_right_camera_controller" filename="libgazebo_ros_camera.so">
              <ros>
                <namespace>/</namespace>
                <remapping>image_raw:=image_raw</remapping>
                <remapping>camera_info:=camera_info</remapping>
              </ros>
              <camera_name>sr_right_image</camera_name>


            <!-- <ros> -->
            <!--   <namespace>custom_ns</namespace> -->
            <!--   <argument>image_raw:=custom_img</argument> -->
            <!--   <argument>camera_info:=custom_info</argument> -->
            <!-- </ros> -->

            <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
            <!-- <camera_name>left_camera</camera_name> -->

            <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
            <frame_name>sr_cam_r_optical</frame_name>

            <hack_baseline>0.07</hack_baseline>

            <!-- No need to repeat distortion parameters or to set autoDistortion -->
          </plugin>
        </sensor>
      </gazebo>


	<gazebo reference="sr_cam_l_frame">
	  <sensor name="depth_camera" type="depth">
            <always_on>true</always_on>
            <update_rate>15</update_rate>
            <pose>0 0 0 0 0 0</pose>
            <camera name="realsense_depth_camera">
              <horizontal_fov>${77.0*pi/180}</horizontal_fov>
              <image>
                <width>1280</width>
                <height>800</height>
                <format>B8G8R8</format>
              </image>
              <clip>
                <near>0.05</near>
                <far>8</far>
              </clip>


            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.7</stddev>
            </noise>


            </camera>
            <!-- https://github.com/mlherd/ros2_turtlebot3_waffle_intel_realsense -->
            <!-- <plugin name="intel_realsense_d430_depth_driver" filename="libgazebo_ros_camera.so"> -->
            <plugin name="intel_realsense_r200_depth_driver" filename="libgazebo_ros_camera.so">
              <ros>
                <namespace>depth_camera</namespace>
                <remapping>depth_camera/image_raw:=color/image_raw</remapping>
                <remapping>depth_camera/depth/image_raw:=depth/image_rect_raw</remapping>
                <remapping>depth_camera/camera_info:=camera_info</remapping>
                <remapping>depth_camera/depth/camera_info:=depth/camera_info</remapping>
                <remapping>depth_camera/points:=depth/points</remapping>
              </ros>
              <camera_name>depth_camera</camera_name>
              <frame_name>sr_cam_l_optical</frame_name>
              <hack_baseline>0.07</hack_baseline>
              <min_depth>0.05</min_depth>
              <max_depth>8.0</max_depth>
            </plugin>
	  </sensor>
	</gazebo>



  <!-- <link name="r_wrist_cam_frame"/> -->
  <!-- <joint name="r_wrist_cam_frame_joint" type="fixed"> -->
  <!--   <origin xyz="0 0 0" rpy="0.0 0 0"/> -->
  <!--   <parent link="r_gripper_palm_link"/> -->
  <!--   <child link="r_wrist_cam_frame"/> -->
  <!-- </joint> -->


  <!-- <link name="r_wrist_camera"/> -->
  <!-- <joint name="r_wrist_camera_joint" type="fixed"> -->
  <!--   <origin xyz="0.11 -0.01 0.08" rpy="0.35 -0.7 0"/> -->
  <!--   <parent link="r_wrist_cam_frame"/> -->
  <!--   <child link="r_wrist_camera"/> -->
  <!-- </joint> -->


  <xacro:if value="$(arg use_gazebo)">

    <gazebo>
      <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
        <!-- <parameters>$(find -->
        <!-- reachy_bringup)/config/reachy_${robot_config}_controllers.yaml</parameters> -->
        <parameters>$(find reachy_bringup)/config/reachy_full_kit_controllers.yaml</parameters>
        <!-- TODO FIX ME PROPER controller import  -->
        <robotNamespace>/reachy</robotNamespace>
      </plugin>
    </gazebo>


  </xacro:if>


</robot>
